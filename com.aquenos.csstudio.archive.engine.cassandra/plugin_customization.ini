#
# Archive Engine
#

# See preferences.ini in org.csstudio.archive.engine plugin.
# You can use your own settings, the following ones are just suggestions which
# should work well with the Cassandra Archiver.

# Reduce ignored future from 1 day to 2 hours, because the Cassandra archiver cannot handle more anyway
org.csstudio.archive.engine/ignored_future = 7200

# Write to the database more often. If there is a significant number of channels, the write will take some time anyway.
org.csstudio.archive.engine/write_period = 10

# Increase batch size. As Cassandra does not use transactions, it is very unlikely that a problem for some samples will cause all samples not to be written.
org.csstudio.archive.engine/batch_size = 5000

# Increase buffer reserve. This will cost some mroe memory for the buffers, but with the reduced write period they are not too big anyway. Having a larger buffer reserve allows us to declare an expected change period in the configuration, that is closer to the real average change period, which will positively affect the bucket size.
org.csstudio.archive.engine/buffer_reserve = 4.0


#
# Cassandra Archiver
#

# Adjust these settings for your local Cassandra cluster.

# Comma-Separated List of Cassandra Servers.
# You can specify only one server, but if you have a cluster
# with several nodes, you want to list more here for fail-over.
#com.aquenos.csstudio.archive.cassandra/hosts=localhost

# Thrift Port for the Cassandra Server(s).
#com.aquenos.csstudio.archive.cassandra/port=9160

# Cassandra Keyspace Name.
#com.aquenos.csstudio.archive.cassandra/keyspace=cssArchive

# Cassandra Username
#com.aquenos.csstudio.archive.cassandra/username=

# Cassandra Password
#com.aquenos.csstudio.archive.cassandra/password=

# Number of Compressor Worker Threads
#com.aquenos.csstudio.archive.writer.cassandra.numCompressorWorkers=1

# Consistency Levels
# The consistency level defines how many replicas a change needs to be written
# to or read from in order to be considered successful. You can configure
# separate consistency levels for reads and writes as well as sample data and
# meta-data. These options are very advanced and you have a good chance of
# messing things up if you change them without being very careful. Therefore
# you should only change them if you are familiar with the replication scheme
# used by Cassandra and how the consistency level affects the consistency of the
# data being read.
#com.aquenos.csstudio.archive.cassandra/readDataConsistencyLevel=QUORUM
#com.aquenos.csstudio.archive.cassandra/writeDataConsistencyLevel=QUORUM
#com.aquenos.csstudio.archive.cassandra/readMetaDataConsistencyLevel=QUORUM
#com.aquenos.csstudio.archive.cassandra/writeMetaDataConsistencyLevel=QUORUM


#
# Channel Access
#

org.csstudio.platform.libs.epics/use_pure_java=true
org.csstudio.platform.libs.epics/monitor=ARCHIVE
org.csstudio.platform.libs.epics/addr_list=
org.csstudio.platform.libs.epics/auto_addr_list=true


#
# Logging preferences
#

org.csstudio.logging/console_level=CONFIG
org.csstudio.logging/file_level=CONFIG
# Log in directory where engine was started
org.csstudio.logging/file_pattern=engine.log
org.csstudio.logging/jms_url=
org.csstudio.logging/jms_level=SEVERE
